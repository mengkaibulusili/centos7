{"version":3,"sources":["AApplication.tsx","ABrowserPath.tsx","component/AddVipPanel.tsx","net/netVip.ts","component/AddProjPanel.tsx","component/WatchProjPanel.tsx","component/LoadsProjPanel.tsx","static/uploadsProj.png","serviceWorker.ts","index.tsx","net/netConfig.ts","net/netProj.ts","component/globalFunction.tsx","net/netDealResp.tsx","net/netDoRequest.ts"],"names":["Sider","Layout","Header","Content","Cxhy","Czhy","AddVip","AddProj","WatchProj","LoadsProj","AllRoute","list","map","x","chirdenList","children","y","node","eval","nodeName","err","key","genUUID","exact","path","routeList","breadcrumbName","concat","String","Application","style","backgroundColor","height","itemRender","route","params","routes","paths","className","to","ABrowserPath","head","color","AddVipPanel","useState","telephone","settelephone","vipName","setvipName","staff","setstaff","moment","birthDay","setbirthDay","inputList","id","addonBefore","tips","inputShow","index","value","onChange","e","target","console","log","placeholder","maxLength","size","align","gutter","justify","span","title","inputReadOnly","format","date","dateString","type","onClick","queryObj","name","birthday","staffid","addVipApi","queryData","a","doGetRequest","addVipUrl","AddProjPanel","projname","setprojname","projprice","setprojprice","projintroduce","setprojintroduce","InputList","inputInfoList","addProjApi","Option","Select","WatchProjPanel","projdata","setprojdata","loadData","getAllProjApi","data","useEffect","projColumns","dataIndex","sorter","b","pk","onFilter","record","indexOf","render","text","visible","setvisible","pn","_","pp","st","pi","state","setstate","destroyOnClose","onCancel","cancelText","okText","onOk","reqData","oldprojname","changeProjApi","width","defaultValue","v","ChengeButton","onRow","event","rowKey","dataSource","columns","LoadsProjPanel","setcsvText","ds","setds","uploadsCsv","split","splice","z","l","n","join","get","UploadAera","props","multiple","beforeUpload","file","reader","FileReader","onloadend","evt","result","readAsText","readFile","info","trigger","content","src","uploadsDemo","module","exports","Boolean","window","location","hostname","match","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","Gproxy","Gtimeout","addProjUrl","watchProjUrl","changeProjUrl","GetRequestData","d","Date","getTime","replace","c","r","Math","random","floor","toString","dealResp","resq","config","top","success","url","axios","JSON","stringify","timeout"],"mappings":"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","file":"static/js/main.45a752ec.chunk.js","sourcesContent":["import \"./index.css\";\nimport React from \"react\";\nimport ABrowserPath from \"./ABrowserPath\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  withRouter,\n} from \"react-router-dom\";\n\nimport { Layout, Breadcrumb, Row } from \"antd\";\nimport { genUUID } from \"./component/globalFunction\";\n\nimport { AddVipPanel } from \"./component/AddVipPanel\";\nimport { AddProjPanel } from \"./component/AddProjPanel\";\nimport { WatchProjPanel } from \"./component/WatchProjPanel\";\nimport { LoadsProjPanel } from \"./component/LoadsProjPanel\";\n\nconst { Sider, Header, Content } = Layout;\nlet Cxhy = () => {\n  return <div>cx</div>;\n};\n\nlet Czhy = () => <div>cz</div>;\n\nlet AddVip = () => <AddVipPanel />;\n\nlet AddProj = () => <AddProjPanel />;\n\nlet WatchProj = () => <WatchProjPanel />;\nlet LoadsProj = () => <LoadsProjPanel />;\n\nlet AllRoute = (list: any) => {\n  try {\n    return list.map((x: any) => {\n      let chirdenList = x.children.map((y: any) => {\n        let node: any = \"\";\n        try {\n          node =\n            typeof eval(y.nodeName) == \"function\" ? (\n              eval(y.nodeName + \"()\")\n            ) : (\n              <div>错误节点</div>\n            );\n        } catch (err) {\n          node = <div>未上线功能</div>;\n        }\n        return (\n          <Route key={genUUID()} exact path={y.path}>\n            {node}\n          </Route>\n        );\n      });\n\n      const routeList = [\n        <Route key={genUUID()} exact path={x.path}>\n          {x.breadcrumbName}\n        </Route>,\n      ].concat(chirdenList);\n\n      return routeList;\n    });\n  } catch (err) {\n    return <Row>{String(err)}</Row>;\n  }\n};\n\nlet Application = () => {\n  function itemRender(route: any, params: any, routes: any, paths: any) {\n    return (\n      <Link key={genUUID()} className=\"Link\" to={route.path}>\n        {route.breadcrumbName}\n      </Link>\n    );\n  }\n\n  return (\n    <Layout>\n      <Header style={{ backgroundColor: \"#c8d6ec\", height: \"50px\" }}>\n        <Breadcrumb itemRender={itemRender} routes={ABrowserPath.head} />\n      </Header>\n      <Layout>\n        <Content style={{ color: \"black\" }}>\n          {AllRoute(ABrowserPath.head)}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\nexport default Application;\n","let ABrowserPath = {\n  head: [\n    {\n      path: \"/js/\",\n      breadcrumbName: \"结算模块\",\n      children: [\n        {\n          path: \"/js/goumaishangpin\",\n          breadcrumbName: \"购买商品\",\n          nodeName: \"Gmsp\",\n        },\n        {\n          path: \"/js/goumaixiangmu\",\n          breadcrumbName: \"购买项目\",\n          nodeName: \"Gmxm\",\n        },\n      ],\n    },\n    {\n      path: \"/hy/\",\n      breadcrumbName: \"会员模块\",\n      children: [\n        {\n          path: \"/hy/chaxunhunyuan\",\n          breadcrumbName: \"查询会员\",\n          nodeName: \"Chhy\",\n        },\n        {\n          path: \"/hy/chongzhihuiyuan\",\n          breadcrumbName: \"充值会员\",\n          nodeName: \"Czhy\",\n        },\n        {\n          path: \"/hy/tianjiahuiyuan\",\n          breadcrumbName: \"添加会员\",\n          nodeName: \"AddVip\",\n        },\n      ],\n    },\n    {\n      path: \"/yg/\",\n      breadcrumbName: \"员工模块\",\n      children: [\n        {\n          path: \"/yg/xinjianyuangong\",\n          breadcrumbName: \"新建员工\",\n          nodeName: \"Xjyg\",\n        },\n        {\n          path: \"/yg/xiugaiyuangong\",\n          breadcrumbName: \"修改员工\",\n          nodeName: \"Xgyg\",\n        },\n        {\n          path: \"/yg/chaxunyuangong\",\n          breadcrumbName: \"查询员工\",\n          nodeName: \"Cxyg\",\n        },\n      ],\n    },\n    {\n      path: \"/sp/\",\n      breadcrumbName: \"商品模块\",\n      children: [\n        {\n          path: \"/sp/shangjiashangpin\",\n          breadcrumbName: \"上架商品\",\n          nodeName: \"Sjsp\",\n        },\n        {\n          path: \"/sp/xiugaishangpin\",\n          breadcrumbName: \"修改商品\",\n          nodeName: \"Xgsp\",\n        },\n        {\n          path: \"/sp/xinjianpinpai\",\n          breadcrumbName: \"新建品牌\",\n          nodeName: \"Xjpp\",\n        },\n        {\n          path: \"/sp/xiugaipinpai\",\n          breadcrumbName: \"修改品牌\",\n          nodeName: \"Xgpp\",\n        },\n      ],\n    },\n    {\n      path: \"/xm/\",\n      breadcrumbName: \"项目模块\",\n      children: [\n        {\n          path: \"/xm/shangjiaxiangmu\",\n          breadcrumbName: \"上架项目\",\n          nodeName: \"AddProj\",\n        },\n        {\n          path: \"/xm/chakanxiangmu\",\n          breadcrumbName: \"查看与修改项目\",\n          nodeName: \"WatchProj\",\n        },\n        {\n          path: \"/xm/piliangdaoruxiangmu\",\n          breadcrumbName: \"批量导入项目\",\n          nodeName: \"LoadsProj\",\n        },\n      ],\n    },\n  ],\n};\nexport default ABrowserPath;\n","import React, { useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Input,\n  Card,\n  Button,\n  Divider,\n  DatePicker,\n  Tag,\n  Radio,\n} from \"antd\";\nimport { genUUID } from \"./globalFunction\";\nimport moment from \"moment\";\nimport { addVipApi } from \"../net/netVip\";\n\ninterface vipProps {\n  telephone: string;\n  vipName: string;\n  birthDay: string;\n  money: string;\n  staff: string;\n}\n\nexport let AddVipPanel = () => {\n  let [telephone, settelephone] = useState(\"\");\n  let [vipName, setvipName] = useState(\"\");\n  let [staff, setstaff] = useState(\"\");\n  let [birthDay, setbirthDay] = useState(moment(\"1990-6-1\"));\n\n  const inputList = [\n    { id: \"vipName\", addonBefore: \"姓名\", tips: \"真实姓名\" },\n    { id: \"telephone\", addonBefore: \"电话\", tips: \"11位有效电话地址\" },\n    { id: \"staff\", addonBefore: \"办理人\", tips: \"员工名称\" },\n    // { id: \"money\", addonBefore: \"充值金额\" },\n  ];\n\n  interface inputAttr {\n    id: string;\n    addonBefore: string;\n    tips: string;\n  }\n\n  let inputShow = inputList.map((x: inputAttr, index: number) => {\n    return (\n      <Input\n        key={x.id}\n        className=\"inputCol\"\n        addonBefore={x.addonBefore}\n        value={eval(x.id)}\n        onChange={(e) => {\n          eval(\"set\" + x.id)(e.target.value);\n          console.log(x.id, eval(x.id));\n        }}\n        placeholder={x.tips}\n        maxLength={11}\n        size={\"large\"}\n      ></Input>\n    );\n  });\n  return (\n    <Row align=\"middle\" gutter={20} justify=\"center\">\n      <Col span={8}>\n        <Card title={\"创建新会员\"}>\n          {inputShow}\n          <Divider />\n          <Row>\n            <Tag color=\"green\"> 选择生日啦 </Tag>\n            <DatePicker\n              size={\"large\"}\n              inputReadOnly={true}\n              format=\"YYYY 年 MM 月 DD 日 \"\n              onChange={(date: any, dateString: string) => {\n                setbirthDay(date);\n                console.log(\"time:\", dateString);\n              }}\n              value={birthDay}\n            />\n          </Row>\n          <Divider />\n          <Col>\n            <Button\n              type={\"primary\"}\n              onClick={() => {\n                let queryObj = {\n                  name: vipName,\n                  telephone: telephone,\n                  birthday: birthDay,\n                  staffid: \"1\",\n                  staff: staff,\n                };\n                addVipApi(queryObj);\n              }}\n            >\n              提交\n            </Button>\n          </Col>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n","import { doGetRequest } from \"./netDoRequest\";\nimport { addVipUrl } from \"./netConfig\";\nexport async function addVipApi(queryData: Object) {\n  doGetRequest(addVipUrl, queryData);\n}\n","import React, { useState } from \"react\";\nimport { Input, Col, Row, Divider, Card, Button } from \"antd\";\nimport { addProjApi } from \"../net/netProj\";\n\n// http://127.0.0.1:8000/api/projs/createProj/?data={\"projname\": \"海飞丝\",\"projprice\":\"212\",\"projintroduce\":\"2012012\"}\nexport let AddProjPanel = () => {\n  let [projname, setprojname] = useState(\"\");\n  let [projprice, setprojprice] = useState(\"\");\n  let [projintroduce, setprojintroduce] = useState(\"\");\n  let inputList = [\n    {\n      id: \"projname\",\n      addonBefore: \"项目名称\",\n      tips: \"项目的唯一名称 (必填且唯一)\",\n    },\n    { id: \"projprice\", addonBefore: \"价格\", tips: \"价格 (￥)\" },\n    {\n      id: \"projintroduce\",\n      addonBefore: \"介绍\",\n      tips: \"简要的项目介绍 (选填，可不填)\",\n    },\n  ];\n\n  interface inputAttr {\n    id: string;\n    addonBefore: string;\n    tips: string;\n  }\n\n  let InputList = (inputInfoList: Array<inputAttr>) => {\n    let InputList = inputInfoList.map((x: inputAttr, index: number) => {\n      return (\n        <Input\n          key={x.id}\n          className=\"inputCol\"\n          addonBefore={x.addonBefore}\n          value={eval(x.id)}\n          onChange={(e) => {\n            eval(\"set\" + x.id)(e.target.value);\n          }}\n          placeholder={x.tips}\n          size={\"large\"}\n        ></Input>\n      );\n    });\n\n    return (\n      <Row>\n        <Col>\n          <Divider />\n          {InputList}\n          <Divider />\n        </Col>\n      </Row>\n    );\n  };\n\n  // http://127.0.0.1:8000/api/projs/createProj/?data={\"projname\": \"海飞丝\",\"projprice\":\"212\",\"projintroduce\":\"2012012\"}\n  return (\n    <Row align=\"middle\" gutter={20} justify=\"center\">\n      <Col span={8}>\n        <Card>\n          {InputList(inputList)}\n          <Button\n            type={\"primary\"}\n            onClick={() => {\n              let queryObj = {\n                projname: projname,\n                projprice: projprice,\n                projintroduce: projintroduce,\n              };\n              addProjApi(queryObj);\n            }}\n          >\n            新建项目\n          </Button>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n","import { watch } from \"fs\";\nimport React, { useState, useEffect } from \"react\";\nimport { getAllProjApi } from \"../net/netProj\";\nimport { Row, Table, Col, Button, Input, Divider, Select, Modal } from \"antd\";\nimport { checkServerIdentity } from \"tls\";\nimport * as _ from \"lodash\";\nimport { changeProjApi } from \"../net/netProj\";\n\nconst { Option } = Select;\n\nlet ChengeButton = (\n  text: any,\n  record: any,\n  index: number,\n  loadData: Function\n) => {\n  let [visible, setvisible] = useState(false);\n  const pn = _.get(record, \"fields.projname\", \"空\");\n  const pp = _.get(record, \"fields.projprice\", \"空\");\n  const st = _.get(record, \"fields.state\", \"空\");\n  const pi = _.get(record, \"fields.projintroduce\", \"空\");\n  let [projname, setprojname] = useState(pn);\n  let [projprice, setprojprice] = useState(pp);\n  let [state, setstate] = useState(st);\n  let [projintroduce, setprojintroduce] = useState(pi);\n  let b = (\n    <Row key={\"r1\"}>\n      <Col key={\"c1\"}>\n        <Button\n          key={\"b1\"}\n          type={\"primary\"}\n          onClick={() => {\n            setvisible(true);\n            console.log(\"this \", record);\n          }}\n        >\n          修改\n        </Button>\n        <Modal\n          key={\"m1\"}\n          visible={visible}\n          destroyOnClose={true}\n          onCancel={() => {\n            setvisible(false);\n          }}\n          cancelText=\"取消\"\n          okText=\"提交修改\"\n          onOk={async () => {\n            const reqData = {\n              oldprojname: pn,\n              projname: projname,\n              projprice: projprice,\n              state: state,\n              projintroduce: projintroduce,\n            };\n            await changeProjApi(reqData);\n            setvisible(false);\n          }}\n        >\n          <Row key={\"r2\"} align=\"middle\" gutter={20} justify=\"center\">\n            <Col key={\"c2\"}>\n              <Input\n                style={{ width: \"400px\" }}\n                addonBefore=\"项目名称\"\n                defaultValue={projname}\n                size={\"large\"}\n                onChange={(e) => {\n                  setprojname(e.target.value);\n                }}\n              ></Input>\n              <Divider></Divider>\n              <Input\n                style={{ width: \"400px\" }}\n                addonBefore=\"价格(￥)\"\n                defaultValue={projprice}\n                size={\"large\"}\n                onChange={(e) => {\n                  setprojprice(e.target.value);\n                }}\n              ></Input>\n              <Divider></Divider>\n              <Input\n                style={{ width: \"400px\" }}\n                addonBefore=\"介绍\"\n                defaultValue={projintroduce}\n                size={\"large\"}\n                onChange={(e) => {\n                  setprojintroduce(e.target.value);\n                }}\n              ></Input>\n              <Divider></Divider>\n              <Select\n                style={{ width: \"400px\" }}\n                defaultValue={state}\n                onChange={(v) => {\n                  setstate(v);\n                }}\n              >\n                <Option value=\"在售\">在售</Option>\n                <Option value=\"下架\">下架</Option>\n              </Select>\n            </Col>\n          </Row>\n        </Modal>\n      </Col>\n    </Row>\n  );\n  return b;\n};\n\nexport function WatchProjPanel() {\n  let [projdata, setprojdata] = useState([{ key: \"1\" }]);\n\n  let [searchText, setsearchText] = useState(\"\");\n  let [searchedColumn, setsearchedColumn] = useState(\"\");\n\n  async function loadData() {\n    let data: Array<any> = await getAllProjApi({});\n    setprojdata(data);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  // createtime: \"20200815-10:08:33\"\n  // projintroduce: \"2012012\"\n  // projname: \"海飞丝\"\n  // projprice: \"212\"\n  // state: \"下架\"\n  const projColumns = [\n    {\n      title: \"序号\",\n      dataIndex: \"pk\",\n      key: \"pk\",\n      sorter: (a: any, b: any) => a.pk - b.pk,\n      onFilter: (value: any, record: any) => record.name.indexOf(value) === 0,\n    },\n    {\n      title: \"项目名称\",\n      dataIndex: [\"fields\", \"projname\"],\n      key: \"projname\",\n    },\n    {\n      title: \"价格(￥)\",\n      dataIndex: [\"fields\", \"projprice\"],\n      key: \"projprice\",\n    },\n    {\n      title: \"状态\",\n      dataIndex: [\"fields\", \"state\"],\n      key: \"state\",\n    },\n    {\n      title: \"最后修改时间\",\n      dataIndex: [\"fields\", \"createtime\"],\n      key: \"createtime\",\n    },\n    {\n      title: \"项目介绍\",\n      dataIndex: [\"fields\", \"projintroduce\"],\n      key: \"projintroduce\",\n    },\n    {\n      title: \"修改信息\",\n      key: \"update\",\n      render: (text: any, record: any, index: number) => {\n        return ChengeButton(text, record, index, loadData);\n      },\n    },\n  ];\n\n  return (\n    <Row align=\"middle\" gutter={20} justify=\"center\">\n      <Col>\n        <Table\n          onRow={(record) => {\n            return {\n              onClick: (event) => {\n                loadData();\n              },\n            };\n          }}\n          rowKey={(record: any) => {\n            return _.get(record, \"pk\", \"\");\n          }}\n          // dataSource={[]}\n          dataSource={projdata}\n          columns={projColumns}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React, { useState } from \"react\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport Dragger from \"antd/lib/upload/Dragger\";\nimport { message, Row, Col, Table, Button, Popover } from \"antd\";\nimport _ from \"lodash\";\nimport { addProjApi } from \"../net/netProj\";\nimport { genUUID } from \"./globalFunction\";\nimport uploadsDemo from \"../static/uploadsProj.png\";\n\nexport let LoadsProjPanel = () => {\n  let [csvText, setcsvText] = useState(\"\");\n  let [ds, setds] = useState([]);\n\n  let uploadsCsv = (x: any) => {\n    let y = x.split(\"\\n\");\n    y.splice(0, 1);\n    let z = y.map((l: string) => {\n      l = l.split(\"，\").join(\",\");\n      let n = l.split(\",\");\n      let data = {\n        projname: _.get(n, \"0\", \"\"),\n        projprice: _.get(n, \"1\", \"\"),\n        state: _.get(n, \"2\", \"\"),\n      };\n      addProjApi(data);\n      return data;\n    });\n    setds(z);\n  };\n\n  let UploadAera = () => {\n    const props = {\n      name: \"file\",\n      multiple: true,\n      beforeUpload: (file: any) => {\n        console.log(file);\n        let reader = new FileReader();\n        let readFile = async () => {\n          reader.onloadend = function (evt: any) {\n            setcsvText(evt.target.result);\n            uploadsCsv(evt.target.result);\n          };\n          reader.readAsText(file);\n        };\n        readFile();\n        return false;\n      },\n      onChange(info: any) {},\n    };\n    return (\n      <Dragger {...props}>\n        <p className=\"ant-upload-drag-icon\">\n          <InboxOutlined />\n        </p>\n        <p className=\"ant-upload-text\">点击 或者 拖拽csv文件到 此处</p>\n        <pre className=\"ant-upload-hint\">\n          上传的文件\n          <br /> 一行一个数据 带表头\n          <br /> 一列一个属性\n          <br /> 以 逗号 间隔\n        </pre>\n      </Dragger>\n    );\n  };\n\n  const c = [\n    {\n      title: \"项目名称\",\n      dataIndex: \"projname\",\n      key: \"projname\",\n    },\n    {\n      title: \"价格(￥)\",\n      dataIndex: \"projprice\",\n    },\n    {\n      title: \"介绍\",\n      dataIndex: \"state\",\n    },\n  ];\n\n  return (\n    <Row>\n      <Col span={8}>\n        <Popover\n          trigger=\"hover\"\n          title=\"项目批量上传.csv\"\n          content={<img src={uploadsDemo}></img>}\n        >\n          <Button type=\"primary\">范本实例</Button>\n        </Popover>\n        <UploadAera></UploadAera>\n      </Col>\n      <Col span={8}>\n        预览表格内容\n        <Table\n          // rowKey={(r) => _.get(r, \"projname\", \"\")}\n          rowKey={genUUID}\n          columns={c}\n          dataSource={ds}\n        ></Table>\n      </Col>\n    </Row>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/uploadsProj.3372313e.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./AApplication\";\nimport Application from \"./AApplication\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/#/\">\n    <Application />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// export let Gproxy = \"http://localhost:8000\";\nexport let Gproxy = \"\";\n\nexport let Gtimeout = 2000;\n\n// url list\nexport let addVipUrl = \"/api/vips/createVip\";\n\nexport let addProjUrl = \"/api/projs/createProj\";\nexport let watchProjUrl = \"/api/projs/getAllProj\";\nexport let changeProjUrl = \"/api/projs/changeProj\";\n","import { doGetRequest, GetRequestData } from \"./netDoRequest\";\nimport { addProjUrl, watchProjUrl, changeProjUrl } from \"./netConfig\";\n\nexport async function addProjApi(queryData: Object) {\n  doGetRequest(addProjUrl, queryData);\n}\n\nexport async function getAllProjApi(queryData: Object) {\n  let data = await GetRequestData(watchProjUrl, queryData);\n  return data;\n}\n\nexport async function changeProjApi(queryData: Object) {\n  doGetRequest(changeProjUrl, queryData);\n}\n","export let genUUID = function () {\n  var d = new Date().getTime();\n  var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (\n    c\n  ) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return uuid;\n};\n","import * as _ from \"lodash\";\nimport React from \"react\";\nimport { message, Card } from \"antd\";\n\nexport let dealResp = (resq: any) => {\n  console.log(resq);\n  let config: any = { top: 200 };\n  if (\n    _.isEqual(_.get(resq, \"status\", -1), 200) &&\n    _.isEqual(_.get(resq, \"data.code\", \"-1\"), \"0\")\n  ) {\n    config[\"content\"] = <pre>操作成功</pre>;\n    message.success(config);\n  } else if (\n    _.isEqual(_.get(resq, \"status\", -1), 200) &&\n    _.isEqual(_.get(resq, \"data.code\", \"-1\"), \"-1\")\n  ) {\n    config[\"content\"] = (\n      <Card title=\"操作失败,字段错误\">\n        {_.get(resq, \"data.message\", \"未知错误\")}\n      </Card>\n    );\n    message.error(config);\n  } else if (!_.isEqual(_.get(resq, \"status\", -1), 200)) {\n    config[\"content\"] = (\n      <Card title=\"网络故障\">{_.get(resq, \"data.message\", \"未知错误\")}</Card>\n    );\n    message.error(config);\n  }\n};\n","import { dealResp } from \"./netDealResp\";\nimport { Gproxy, Gtimeout } from \"./netConfig\";\nimport axios from \"axios\";\nimport * as _ from \"lodash\";\n\nexport async function doGetRequest(url: string, queryData: Object) {\n  let resq = {};\n  try {\n    resq = await axios.get(Gproxy + url, {\n      params: {\n        data: JSON.stringify(queryData),\n      },\n      timeout: Gtimeout,\n    });\n    dealResp(resq);\n  } catch (err) {\n    dealResp(resq);\n  }\n}\n\nexport async function GetRequestData(url: string, queryData: Object) {\n  let resq = {};\n  try {\n    resq = await axios.get(Gproxy + url, {\n      params: {\n        data: JSON.stringify(queryData),\n      },\n      timeout: Gtimeout,\n    });\n    console.log(\"resq\", resq);\n    return _.get(resq, \"data.data\", {});\n  } catch (err) {\n    dealResp(resq);\n    return [];\n  } finally {\n  }\n}\n"],"sourceRoot":""}